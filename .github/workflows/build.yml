name: Build

on: [push]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements-dev.txt
    - name: Lint with flake8
      run: |
        flake8 .
    - name: Black
      run: |
        black --check .

  test:
    name: Test
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements-dev.txt
    - name: Install the package
      run: |
        python -m pip install -e .
    - name: Run the tests
      run: |
        pytest -v tests/

  pytest:
    name: Test all pytest version
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install tox
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Pytest 4
      run: |
        tox -e py38-pytest4
    - name: Pytest 5
      run: |
        tox -e py38-pytest5
    - name: Pytest 6
      run: |
        tox -e py38-pytest6
    - name: Pytest 7
      run: |
        tox -e py38-pytest7

  deploy:
    name: Deploy on Pypi
    needs: pytest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install pypa/build
      run: |
        python -m pip install --upgrade pip
        python -m pip install build --user
    - name: Build a binary wheel and a source tarball
      run: |
        python -m build --sdist --wheel --outdir dist/
    - name: Publish package on Pypi
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
